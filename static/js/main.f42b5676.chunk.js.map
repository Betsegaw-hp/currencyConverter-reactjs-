{"version":3,"sources":["currencyConverter.js","CurrencyHistory.js","App.js","index.js"],"names":["CurrencyConverter","props","currencyOption","selectedOption","onChangeCurrency","handleAmountChange","amount","className","type","placeholder","value","onChange","map","option","key","CurrencyHistory","handleDateChange","pickDate","current","Date","today","getFullYear","getMonth","getDate","min","max","App","useState","setCurrencyOption","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","exchangeRate","setExchangeRate","setAmount","isFromCurrency","setIsFromCurrency","setPickDate","slice","toAmount","fromAmount","BASE_URL","useEffect","axios","method","url","responseType","auth","apikey","then","res","firstCurrency","Object","keys","data","rates","base","catch","err","console","log","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f42b5676.chunk.js","sourcesContent":["import React from 'react';\n\nfunction CurrencyConverter(props) {\n    const {\n      currencyOption,\n      selectedOption,\n      onChangeCurrency,\n      handleAmountChange,\n      amount\n    } = props;\n    \n    return(\n      <>\n      <input className=\"input\" \n             type=\"number\"\n             placeholder=\"currency\" \n              value={amount}\n              onChange={handleAmountChange}/>\n       <select className=\"selection\" \n               value={selectedOption}\n                onChange={onChangeCurrency}\n              >\n         { currencyOption && currencyOption.map((option)=> (\n            <option key={option} value=\n            {option}>{option}</option>\n         ))}\n          \n         </select>       \n              </>\n    );\n  }\n\n  export default CurrencyConverter;","import React from 'react';\n\n// get date value\nfunction CurrencyHistory(props) {\n  const {\n    handleDateChange,\n    pickDate,\n  } = props;\n  const current = new Date();\n  const today = `${current.getFullYear()}-${current.getMonth() +1}-${current.getDate()}`;\n  return(\n    <>\n    <h3>Want to Know about past Currency Histories?</h3>\n    <p>Pick your Date. By default it will be latest </p>\n    <input type=\"date\" \n           min=\"1999-01-04\"\n           max={today}\n           value={pickDate}\n           onChange={handleDateChange}/>\n    </>\n  );\n}\n\nexport default CurrencyHistory;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport CurrencyConverter from './currencyConverter';\nimport CurrencyHistory from './CurrencyHistory';\n\n\nfunction App() {\n  const [currencyOption , setCurrencyOption] = useState();\n  const [currencyFrom , setCurrencyFrom] = useState();\n  const [currencyTo , setCurrencyTo] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount , setAmount] = useState(1);\n  const [isFromCurrency, setIsFromCurrency] = useState(true);\n  const [pickDate , setPickDate] = useState('live');\n\n  // if you pick future time it will be latest\n  if(pickDate !== 'live') {\n    const current = new Date().getFullYear(); \n    \n  if(pickDate.slice(0,4) >= `${current}`) {\n     setPickDate('live');\n    }\n  }\n  \n  const BASE_URL  = `https://api.apilayer.com/currency_data/${pickDate}`;\n  // Fix - make it env var\n  const apiKey = 'nO4BhDUfDqlrXNkDms6RaOs69O9Lizeq';\n\n\n  //fetch intialy and set key of currencies\n  useEffect(() => {\n    axios({\n       method: 'get', \n       url: BASE_URL,\n       responseType: 'json',\n       auth: {\n        apikey: apiKey,\n       }\n    })\n    .then(res => {\n      const firstCurrency = Object.keys(res.data.rates)[0];\n      setCurrencyOption([res.data.base, ...Object.keys(res.data.rates)]);\n      setCurrencyFrom(res.data.base)\n      setCurrencyTo(firstCurrency)\n    }).catch(err=> console.log(err))\n  },[BASE_URL])\n\n  //fetch when currency options change and set exchangeRate\n  useEffect(()=> {\n    if(currencyFrom != null && currencyTo != null) {\n      axios(`${BASE_URL}?base=${currencyFrom}&symbols=${currencyTo}`)\n      .then( res => setExchangeRate(res.data.rates[currencyTo])\n      )\n      .catch(err => console.log(err))\n    }\n  }, [currencyFrom, currencyTo,BASE_URL])\n\n  let toAmount, fromAmount ;\n  if(isFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate ;\n  } else {\n    // reverse \n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n// seting amount and seting where it is from\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setIsFromCurrency(true)\n  }\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setIsFromCurrency(false)\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"converter coloumn\">\n    <h3>Currency Changer</h3>\n    \n    <CurrencyConverter currencyOption={currencyOption}\n    selectedOption={currencyFrom}\n    onChangeCurrency={e => setCurrencyFrom(e.target.value)}\n    handleAmountChange={handleFromAmountChange}\n    amount={fromAmount}\n    />\n    <div className=\"equals\">=</div>\n    <CurrencyConverter currencyOption= {currencyOption}\n    selectedOption={currencyTo}\n    onChangeCurrency={e => setCurrencyTo(e.target.value)}\n    handleAmountChange={handleToAmountChange}\n    amount={toAmount}\n    />\n  </div>\n  <div className=\"history coloumn\">\n <CurrencyHistory \n      handleDateChange={e => setPickDate(e.target.value)}\n      pickDate={pickDate}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}